#!/usr/bin/env php
<?php

use Kelunik\FqnCheck\FqnChecker;
use PhpParser\NodeTraverser;
use PhpParser\NodeVisitor\NameResolver;
use PhpParser\ParserFactory;
use Symfony\Component\Finder\Finder;
use Symfony\Component\Finder\SplFileInfo;

if ($argc !== 2) {
    print "Usage: fqn-check /path/to/source" . PHP_EOL;
    exit(0);
}

if (file_exists(__DIR__ . "/../vendor/autoload.php")) {
    require_once __DIR__ . "/../vendor/autoload.php";
} else if (file_exists(__DIR__ . "/../../../autoload.php")) {
    require_once __DIR__ . "/../../../autoload.php";
} else {
    print "Missing dependencies, forgot to run 'composer install'?" . PHP_EOL;
    exit(255);
}

$srcDir = $argv[1];

$files = (new Finder)->files()
    ->in($srcDir)
    ->name("*.php");

$parser = (new ParserFactory)->create(ParserFactory::PREFER_PHP7);
$nodeTraverser = new NodeTraverser;

$fqnChecker = new FqnChecker;
$nodeTraverser->addVisitor(new NameResolver);
$nodeTraverser->addVisitor($fqnChecker);

$errors = 0;
$fileCount = count($files);

print "Checking {$fileCount} file" . ($fileCount === 1 ? "" : "s") . "â€¦" . PHP_EOL . PHP_EOL;

foreach ($files as $file) {
    /** @var SplFileInfo $file */
    $nodes = $parser->parse($file->getContents());
    $nodeTraverser->traverse($nodes);

    $findings = $fqnChecker->getFindings();

    foreach ($findings as $finding) {
        if ($errors === 0) {
            print "Found not fully qualified function calls and/or constants in the following files:" . PHP_EOL;
        }

        $errors++;

        print " - " . $file->getRelativePathname() . " on line {$finding["line"]} ({$finding["function"]})" . PHP_EOL;
    }
}

if ($errors === 0) {
    print "Everything is fine." . PHP_EOL;
    exit(0);
} else {
    print PHP_EOL;
    print "Found {$errors} not fully qualified function calls and/or constants.";
    exit(1);
}
